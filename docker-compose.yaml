---
name: social_network

services:
  postgresql:
    image: postgres:16.3-alpine
    environment:
      POSTGRES_PASSWORD: "postgres"
      PGAPPNAME: postgresql
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always
    cpus: 0.25
    ports:
      - "5432:5432"
    volumes:
      - type: volume
        source: postgresql_data
        target: /var/lib/postgresql/data
      - type: bind
        source: infrastructure/postgresql/schema.sql
        target: /docker-entrypoint-initdb.d/schema.sql

  postgresql2:
    profiles:
      - postgresql-replica
    image: postgres:16.3-alpine
    environment:
      POSTGRES_PASSWORD: "postgres"
      PGAPPNAME: postgresql2
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always
    cpus: 0.25
    ports:
      - "5433:5432"
    volumes:
      - type: volume
        source: postgresql2_data
        target: /var/lib/postgresql/data

  postgresql3:
    profiles:
      - postgresql-replica
    image: postgres:16.3-alpine
    environment:
      POSTGRES_PASSWORD: "postgres"
      PGAPPNAME: postgresql3
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always
    cpus: 0.25
    ports:
      - "5434:5432"
    volumes:
      - type: volume
        source: postgresql3_data
        target: /var/lib/postgresql/data

  citus:
    image: citusdata/citus:12.1.3-alpine
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_HOST_AUTH_METHOD: "trust"
      PGAPPNAME: citus
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always
    cpus: 0.25
    ports:
      - "5435:5432"
    volumes:
      - type: volume
        source: citus_data
        target: /var/lib/postgresql/data

  citus_worker_1:
    image: citusdata/citus:12.1.3-alpine
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_HOST_AUTH_METHOD: "trust"
      PGAPPNAME: citus_worker_1
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always
    cpus: 0.25
    volumes:
      - type: volume
        source: citus_worker_1_data
        target: /var/lib/postgresql/data

  citus_worker_2:
    image: citusdata/citus:12.1.3-alpine
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_HOST_AUTH_METHOD: "trust"
      PGAPPNAME: citus_worker_2
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always
    cpus: 0.25
    volumes:
      - type: volume
        source: citus_worker_2_data
        target: /var/lib/postgresql/data

  redis:
    image: redis:7.4.0-alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: always
    cpus: 0.25
    ports:
      - "6379:6379"
    volumes:
      - type: bind
        source: infrastructure/redis/redis.conf
        target: /usr/local/etc/redis/redis.conf
      - type: volume
        source: redis_data
        target: /data

  influxdb:
    image: influxdb:1.8.10
    restart: always
    cpus: 0.25
    ports:
     - "8086:8086"
    volumes:
      - type: bind
        source: infrastructure/influxdb/influx_init.iql
        target: /docker-entrypoint-initdb.d/influx_init.iql
      - type: volume
        source: influxdb_data
        target: /var/lib/influxdb

  grafana:
    image: grafana/grafana:8.5.2
    depends_on:
      - influxdb
    environment:
      DS_NAME: InfluxDB
      DS_TYPE: influxdb
      DS_ACCESS: proxy
      DS_URL: http://influxdb:8086
      DS_DB: jmeter_results
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_NAME: Main Org.
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_USERS_ALLOW_SIGN_UP: "false"
    restart: always
    cpus: 0.25
    ports:
      - "3000:3000"
    volumes:
      - type: bind
        source: infrastructure/grafana/provisioning
        target: /etc/grafana/provisioning

  telegraf:
    image: telegraf:1.30-alpine
    entrypoint: telegraf
    environment:
      HOST_ETC: /hostfs/etc
      HOST_PROC: /hostfs/proc
      HOST_RUN: /hostfs/run
      HOST_SYS: /hostfs/sys
      HOST_VAR: /hostfs/var
      HOST_MOUNT_PREFIX: /hostfs
    restart: always
    user: root
    cpus: 0.25
    volumes:
      - type: bind
        source: infrastructure/telegraf/telegraf.conf
        target: /etc/telegraf/telegraf.conf
      - type: bind
        source: infrastructure/telegraf/net.sh
        target: /net.sh
      - type: bind
        source: /
        target: /hostfs
        read_only: true

  api:
    image: socnet/api
    build:
      context: api
      dockerfile: Dockerfile
    environment:
      POSTGRESQL_HOST: postgresql
      POSTGRESQL2_HOST: postgresql
      POSTGRESQL2_PORT: 5432
      POSTGRESQL3_HOST: postgresql
      POSTGRESQL3_PORT: 5432
      CITUS_HOST: citus
      REDIS_HOST: redis
      ENVIRONMENT: Production
    cpus: 0.25
    restart: always
    ports:
      - "8080:8080"

volumes:
  postgresql_data:
  postgresql2_data:
  postgresql3_data:
  redis_data:
  influxdb_data:
  citus_data:
  citus_worker_1_data:
  citus_worker_2_data:
